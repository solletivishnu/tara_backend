# Generated by Django 5.0.4 on 2025-06-25 06:48

import django.db.models.deletion
import docwallet.models
import income_tax_returns.helpers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('servicetasks', '0001_initial'),
        ('usermanagement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgricultureIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('agriculture', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agriculture_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agriculture_incomereviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agriculture_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_agriculture_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='AgricultureIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.agriculture_income_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('agriculture_income', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agriculture_income_docs', to='income_tax_returns.agricultureincome')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfessionalIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_professional_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_professional_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_professional_income', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_business_professional_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfessionalIncomeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('business_type', models.CharField(max_length=255)),
                ('opting_for_presumptive_taxation', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=255)),
                ('opting_data', models.JSONField(blank=True, default=dict, null=True)),
                ('gst_registered', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=255)),
                ('business_professional_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_professional_income_info', to='income_tax_returns.businessprofessionalincome')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfessionalIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('26AS', '26AS'), ('GST Returns', 'GST Returns'), ('Bank Statements', 'Bank Statements'), ('Other', 'Other'), ('AIS', 'AIS'), ('Profit & Loss Statement', 'Profit & Loss Statement'), ('Balance Sheet', 'Balance Sheet')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.business_professional_income_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('business_professional_income_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.businessprofessionalincomeinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalGainsApplicableDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('gains_applicable', models.JSONField(blank=True, default=list, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_applicable_details_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_applicable_details_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='capital_gains_applicable_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_capital_gains_applicable_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalGainsEquityMutualFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('equity_mutual_fund_type', models.JSONField(blank=True, default=list, null=True)),
                ('sell_any_foreign_sales', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=20)),
                ('sell_any_unlisted_sales', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_equity_mutual_funds_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_equity_mutual_funds_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='capital_gains_equity_mutual_funds', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_capital_gains_equity_mutual_funds', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalGainsEquityMutualFundDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.capital_gains_equity_mutual_fund_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('capital_gains_equity_mutual_fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.capitalgainsequitymutualfund')),
            ],
        ),
        migrations.CreateModel(
            name='CapitalGainsProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('land', 'land'), ('plot', 'plot'), ('building', 'building')], max_length=120)),
                ('date_of_purchase', models.DateField(blank=True, null=True)),
                ('purchase_cost', models.IntegerField(blank=True, null=True)),
                ('date_of_sale', models.DateField(blank=True, null=True)),
                ('sale_value', models.IntegerField(blank=True, null=True)),
                ('purchase_doc', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.capital_gains_property_purchase_doc)),
                ('sale_doc', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.capital_gains_property_sale_doc)),
                ('reinvestment_made', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=20)),
                ('reinvestment_details', models.JSONField(blank=True, default=dict, null=True)),
                ('reinvestment_details_docs', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.capital_gains_property_reinvestment_docs)),
                ('capital_gains_applicable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capital_gains_property_details', to='income_tax_returns.capitalgainsapplicabledetails')),
            ],
        ),
        migrations.CreateModel(
            name='Deductions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deductions_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deductions_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_deductions', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='DividendIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('dividend_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dividend_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dividend_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dividend_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_dividend_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='DividendIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_from', models.CharField(blank=True, max_length=255, null=True)),
                ('dividend_received', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.dividend_income_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('dividend_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.dividendincome')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyPensionIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('family_pension_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='family_pension_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='family_pension_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_pension_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_family_pension_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyPensionIncomeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('Government', 'Government'), ('Private', 'Private'), ('Others', 'Others')], max_length=30)),
                ('amount', models.IntegerField()),
                ('family_pension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_pension_income_docs', to='income_tax_returns.familypensionincome')),
            ],
        ),
        migrations.CreateModel(
            name='ForeignIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('foreign_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreign_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_foreign_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='ForeignIncomeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_income', models.CharField(choices=[('Dividend', 'Dividend'), ('Interest', 'Interest'), ('Others', 'Others')], max_length=30)),
                ('country', models.CharField(max_length=20)),
                ('currency', models.CharField(max_length=3)),
                ('amount', models.IntegerField()),
                ('tax_paid_abroad', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='No', max_length=20)),
                ('form67_file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.foreign_income_file)),
                ('foreign_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreign_income_docs', to='income_tax_returns.foreignincome')),
            ],
        ),
        migrations.CreateModel(
            name='GiftIncomeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('gift_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gift_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gift_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_gift_income_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='GiftIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('received_from', models.CharField(blank=True, max_length=255, null=True)),
                ('relation', models.CharField(blank=True, choices=[('Relative', 'Relative'), ('Non Relative', 'Non Relative')], max_length=255, null=True)),
                ('date_received', models.DateField(blank=True, null=True)),
                ('was_it_marriage_related', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True)),
                ('gift_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_income_details', to='income_tax_returns.giftincomedetails')),
            ],
        ),
        migrations.CreateModel(
            name='HousePropertyIncomeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='house_property_details_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='house_property_details_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='house_property_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_house_property_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='HousePropertyIncomeDetailsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_property', models.CharField(blank=True, max_length=255, null=True)),
                ('property_address', models.JSONField(blank=True, default=dict, null=True)),
                ('owned_property', models.BooleanField(default=False)),
                ('ownership_percentage', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('is_it_property_let_out', models.BooleanField(default=False)),
                ('annual_rent_received', models.IntegerField(blank=True, null=True)),
                ('rent_received', models.CharField(blank=True, max_length=255, null=True)),
                ('pay_municipal_tax', models.BooleanField(default=False)),
                ('municipal_tax_paid', models.IntegerField(blank=True, null=True)),
                ('municipal_tax_receipt', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.house_property_details_municipal_tax_receipt)),
                ('home_loan_on_property', models.BooleanField(default=False)),
                ('interest_during_financial_year', models.IntegerField(blank=True, null=True)),
                ('principal_during_financial_year', models.IntegerField(blank=True, null=True)),
                ('loan_statement', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.house_property_details_loan_statement)),
                ('upload_loan_interest_certificate', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.house_property_details_loan_interest_certificate)),
                ('house_property_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_info', to='income_tax_returns.housepropertyincomedetails')),
            ],
        ),
        migrations.CreateModel(
            name='InterestIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('interest_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_income', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_other_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='InterestIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest_type', models.CharField(choices=[('Savings Account', 'Savings Account'), ('Recurring Deposit', 'Recurring Deposit'), ('NRO Account', 'NRO Account'), ('NRE Account', 'NRE Account'), ('Other', 'Other'), ('Fixed Deposit', 'Fixed Deposit')], max_length=30)),
                ('interest_earned', models.IntegerField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.interest_income_details_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('interest_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.interestincome')),
            ],
        ),
        migrations.CreateModel(
            name='NRIEmployeeSalaryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('foreign_salary_and_employment', models.CharField(blank=True, max_length=255, null=True)),
                ('employment_history', models.JSONField(blank=True, default=list, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_income_details_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foreign_income_details_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='foreign_income_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_foreign_income_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='ForeignEmployeeSalaryDetailsFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('SALARY_SLIP', 'Salary Slip'), ('TAX_PAID_CERTIFICATE_BOARD', 'TAX PAID CERTIFICATE BOARD'), ('BANK_STATEMENT', 'Bank Statement')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.foreign_emp_salary_details_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('nri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreigner_documents', to='income_tax_returns.nriemployeesalarydetails')),
            ],
        ),
        migrations.CreateModel(
            name='OtherCapitalGains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_other_capital_gains_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capital_gains_other_capital_gains_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='capital_gains_other_capital_gains', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_capital_gains_other_capital_gains', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='OtherCapitalGainsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_details', models.CharField(max_length=120)),
                ('purchase_date', models.DateField()),
                ('sale_date', models.DateField()),
                ('sale_value', models.IntegerField()),
                ('purchase_value', models.IntegerField(blank=True, null=True)),
                ('other_capital_gains', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_capital_gain_info', to='income_tax_returns.othercapitalgains')),
            ],
        ),
        migrations.CreateModel(
            name='OtherCapitalGainsDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.other_capital_gains_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('other_capital_gains_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.othercapitalgainsinfo')),
            ],
        ),
        migrations.CreateModel(
            name='OtherIncomeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_income_details_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_income_details_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_income_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_other_income_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='OtherIncomeDetailsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField()),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.outcome_income_details_file)),
                ('notes', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('other_income_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_income_info', to='income_tax_returns.otherincomedetails')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=255)),
                ('residentail_status', models.CharField(max_length=255)),
                ('pan', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.personal_information_pan)),
                ('mobile_number', models.CharField(default=None, max_length=20)),
                ('email', models.EmailField(default=None, max_length=255)),
                ('aadhar', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.personal_information_aadhar)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('non_resident_indian', models.CharField(blank=True, max_length=255, null=True)),
                ('salary_income', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('other_income', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('house_property_income', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('capital_gains', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('business_income', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('agriculture_income', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=5, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_information_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_information_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_information', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_personal_information', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewFilingCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('review_certificate', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.review_filing_certificate)),
                ('review_certificate_status', models.CharField(blank=True, choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], default=None, max_length=20, null=True)),
                ('filing_status', models.CharField(blank=True, choices=[('in progress', 'In Progress'), ('filed', 'Filed'), ('sent for approval', 'Sent for Approval'), ('resubmitted', 'Resubmitted')], default=None, max_length=20, null=True)),
                ('draft_income_file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.draft_filing_certificate)),
                ('approval_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('resubmission', 'Resubmission'), ('sent for approval', 'Sent for Approval'), ('rejected', 'Rejected'), ('approved', 'Approved')], default=None, max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_ITR_review_filing_certificate', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_ITR_review_filing_certificate', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ITR_review_filing_certificate', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_ITR_review_filing_certificate', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('form_16_notes', models.TextField(blank=True, default=None, null=True)),
                ('payslip_notes', models.TextField(blank=True, default=None, null=True)),
                ('bank_statement_notes', models.TextField(blank=True, default=None, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salary_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salary_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='salary_income_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_salary_income_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryDocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('FORM_16', 'Form 16'), ('PAYSLIP', 'Payslip'), ('BANK_STATEMENT', 'Bank Statement')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.salary_income_details_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='income_tax_returns.salaryincome')),
            ],
        ),
        migrations.CreateModel(
            name='Section80C',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investment', models.CharField(blank=True, choices=[('PPF', 'PPF'), ('NSC', 'NSC'), ('ELSS', 'ELSS'), ('Life Insurance', 'Life Insurance'), ('Tuition Fees', 'Tuition Fees'), ('Others', 'Others')], max_length=50, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('deductions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80c', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80CDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80c_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80c', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80c_documents', to='income_tax_returns.section80c')),
            ],
        ),
        migrations.CreateModel(
            name='Section80D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_family_non_senior_citizen', models.IntegerField(blank=True, null=True)),
                ('parents_senior_citizen', models.IntegerField(blank=True, null=True)),
                ('parents_non_senior_citizen', models.IntegerField(blank=True, null=True)),
                ('self_senior_citizen', models.IntegerField(blank=True, null=True)),
                ('preventive_health_checkup', models.IntegerField(blank=True, null=True)),
                ('deductions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='section_80d', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80DDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_disease', models.CharField(blank=True, max_length=255, null=True)),
                ('deductions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='section_80ddb', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80DDBDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80ddb_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80ddb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80ddb_documents', to='income_tax_returns.section80ddb')),
            ],
        ),
        migrations.CreateModel(
            name='Section80DFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80d_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80d', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80d_documents', to='income_tax_returns.section80d')),
            ],
        ),
        migrations.CreateModel(
            name='Section80E',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('education_of', models.CharField(blank=True, choices=[('self', 'self'), ('spouse', 'spouse'), ('children', 'children'), ('dependent', 'dependent')], max_length=50, null=True)),
                ('borrower_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_it_approved_bank', models.BooleanField(default=False)),
                ('loan_outstanding_as_on_31st_march', models.IntegerField(blank=True, null=True)),
                ('deductions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='section_80e', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80EDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Sanction Letter', 'Sanction Letter'), ('Interest Certificate', 'Interest Certificate'), ('Repayment Schedule', 'Repayment Schedule'), ('Other', 'Other')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80e_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80e', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80e_documents', to='income_tax_returns.section80e')),
            ],
        ),
        migrations.CreateModel(
            name='Section80EE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_outstanding_as_on_31st_march', models.IntegerField(blank=True, null=True)),
                ('deductions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80ee', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80EEB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('deductions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='section_80eeb', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80EEBDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Sanction Letter', 'Sanction Letter'), ('Interest Certificate', 'Interest Certificate'), ('Repayment Schedule', 'Repayment Schedule'), ('Other', 'Other')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80eeb_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80eeb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80eeb_documents', to='income_tax_returns.section80eeb')),
            ],
        ),
        migrations.CreateModel(
            name='Section80EEDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Sanction Letter', 'Sanction Letter'), ('Interest Certificate', 'Interest Certificate'), ('Repayment Schedule', 'Repayment Schedule'), ('Other', 'Other')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80ee_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('section_80ee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80ee_documents', to='income_tax_returns.section80ee')),
            ],
        ),
        migrations.CreateModel(
            name='Section80G',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Online Transfer', 'Online Transfer')], max_length=50, null=True)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80g_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('deductions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_80g', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='Section80TTATTBU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_saving_interest', models.IntegerField(blank=True, null=True)),
                ('total_fd_interest', models.IntegerField(blank=True, null=True)),
                ('nature_of_disability', models.CharField(blank=True, choices=[('Blindness', 'Blindness'), ('Deaf and Dumb', 'Deaf and Dumb'), ('Low Vision', 'Low Vision'), ('Leprosy Cured', 'Leprosy Cured'), ('Hearing Impairment', 'Hearing Impairment'), ('Locomotor Disability', 'Locomotor Disability'), ('Mental Illness', 'Mental Illness'), ('Mental Retardation', 'Mental Retardation'), ('Multiple Disabilities', 'Multiple Disabilities'), ('others', 'others')], max_length=50, null=True)),
                ('severity', models.CharField(blank=True, choices=[('40-80%', '40-80%'), ('>80%', '>80%')], max_length=50, null=True)),
                ('deduction_amount', models.IntegerField(blank=True, null=True)),
                ('deduction_file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.section_80ettattbu_file)),
                ('pay_rent_without_recieving_hra', models.BooleanField(default=False)),
                ('pay_rent_amount', models.IntegerField(blank=True, null=True)),
                ('are_you_first_time_homebuyer', models.BooleanField(default=False)),
                ('amount_of_interest_paid', models.IntegerField(blank=True, null=True)),
                ('date_of_loan_sanctioned', models.DateField(blank=True, null=True)),
                ('donation_made_to_political_party', models.BooleanField(default=False)),
                ('donation_amount', models.IntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('deductions', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='section_80ettattbu', to='income_tax_returns.deductions')),
            ],
        ),
        migrations.CreateModel(
            name='TaxPaidDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_paid_details_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_paid_details_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tax_paid_details', to='usermanagement.servicerequest')),
                ('service_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_tax_paid_details', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='TaxPaidDetailsFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('26AS', '26As'), ('AIS', 'AIS'), ('AdvanceTax', 'AdvanceTax')], max_length=30)),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.tax_paid_details_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('tax_paid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_paid_documents', to='income_tax_returns.taxpaiddetails')),
            ],
        ),
        migrations.CreateModel(
            name='WinningIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(default='Income Tax Returns', editable=False, max_length=20)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('completed', 'Completed'), ('sent for approval', 'Sent for Approval'), ('revoked', 'Revoked')], max_length=20)),
                ('winning_income', models.CharField(choices=[('Applicable', 'Applicable'), ('Not Applicable', 'Not Applicable')], max_length=255)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winnings_income_assigned', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winnings_income_reviewed', to=settings.AUTH_USER_MODEL)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winnings', to='usermanagement.servicerequest')),
                ('service_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_task_winnings_income', to='servicetasks.servicetask')),
            ],
        ),
        migrations.CreateModel(
            name='WinningIncomeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('Lottery', 'Lottery'), ('Game Show', 'Game Show'), ('Others', 'Others')], max_length=30)),
                ('amount', models.IntegerField()),
                ('file', models.FileField(blank=True, null=True, storage=docwallet.models.PrivateS3Storage(), upload_to=income_tax_returns.helpers.winning_income_file)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('winning_income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winnings_income_docs', to='income_tax_returns.winningincome')),
            ],
        ),
    ]
