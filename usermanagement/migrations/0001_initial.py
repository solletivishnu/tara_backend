# Generated by Django 5.0.4 on 2025-06-25 06:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import usermanagement.helpers
import usermanagement.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number with 10-15 digits, optionally starting with +', regex='^\\+?\\d{10,15}$')])),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved')], default='pending', max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number with 10-15 digits, optionally starting with +', regex='^\\+?\\d{10,15}$')])),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved')], default='pending', max_length=20)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_time', models.TimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, help_text='Optional category label. You can define choices later.', max_length=100, null=True)),
                ('context_type', models.CharField(choices=[('personal', 'Personal'), ('business', 'Business')], max_length=20)),
                ('is_active', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='yes', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PendingUserOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('otp_code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group_key', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='yes', max_length=3)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServicesMasterData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('invited', 'Invited')], default='active', max_length=10)),
                ('service_request', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('registration_flow', models.CharField(blank=True, choices=[('module', 'Module-based'), ('service', 'Service-based'), ('standard', 'Standard')], help_text='Tracks which registration flow the user started from', max_length=20, null=True)),
                ('initial_selection', models.CharField(blank=True, help_text='The initial module or service the user selected during registration', max_length=100, null=True)),
                ('registration_completed', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', help_text='Indicates if the user has completed the registration process', max_length=3)),
                ('is_active', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=3)),
                ('first_name', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('is_super_admin', models.BooleanField(default=False, editable=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('nameOfBusiness', models.CharField(db_index=True, max_length=200)),
                ('registrationNumber', models.CharField(blank=True, default=None, max_length=120, null=True)),
                ('entityType', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('headOffice', models.JSONField(blank=True, default=dict, null=True)),
                ('pan', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('business_nature', models.CharField(blank=True, choices=[('Agency or Sales House', 'Agency or Sales House'), ('Agriculture', 'Agriculture'), ('Art and Design', 'Art and Design'), ('Automotive', 'Automotive'), ('Construction', 'Construction'), ('Consulting', 'Consulting'), ('Consumer Packaged Goods', 'Consumer Packaged Goods'), ('Education', 'Education'), ('Engineering', 'Engineering'), ('Entertainment', 'Entertainment'), ('Financial Services', 'Financial Services'), ('Food Services (Restaurants/Fast Food)', 'Food Services (Restaurants/Fast Food)'), ('Gaming', 'Gaming'), ('Government', 'Government'), ('Health Care', 'Health Care'), ('Interior Design', 'Interior Design'), ('Internal', 'Internal'), ('Legal', 'Legal'), ('Manufacturing', 'Manufacturing'), ('Marketing', 'Marketing'), ('Mining and Logistics', 'Mining and Logistics'), ('Non-Profit', 'Non-Profit'), ('Publishing and Web Media', 'Publishing and Web Media'), ('Real Estate', 'Real Estate'), ('Retail (E-Commerce and Offline)', 'Retail (E-Commerce and Offline)'), ('Services', 'Services'), ('Technology', 'Technology'), ('Telecommunications', 'Telecommunications'), ('Travel/Hospitality', 'Travel/Hospitality'), ('Web Designing', 'Web Designing'), ('Web Development', 'Web Development'), ('Writers', 'Writers')], default=None, max_length=50, null=True)),
                ('trade_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('mobile_number', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('dob_or_incorp_date', models.DateField(blank=True, default=None, null=True)),
                ('is_msme_registered', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=5)),
                ('msme_registration_type', models.CharField(blank=True, max_length=100, null=True)),
                ('msme_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_clients_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=30, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='usermanagement.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=11, null=True)),
                ('swift_code', models.CharField(blank=True, max_length=11, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to='usermanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessLogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('logo', models.FileField(blank=True, null=True, upload_to=usermanagement.helpers.logo_upload_path)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='logos', to='usermanagement.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('context_type', models.CharField(choices=[('personal', 'Personal'), ('business', 'Business')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('archived', 'Archived')], default='active', max_length=20)),
                ('profile_status', models.CharField(choices=[('incomplete', 'Incomplete'), ('pending_business_details', 'Pending Business Details'), ('complete', 'Complete')], default='incomplete', max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_platform_context', models.BooleanField(default=False)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contexts', to='usermanagement.business')),
                ('owner_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_contexts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='users',
            name='active_context',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_users', to='usermanagement.context'),
        ),
        migrations.CreateModel(
            name='ContextSuiteSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('trial', 'Trial'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('auto_renew', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3)),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applied_credit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_subscriptions', to='usermanagement.context')),
            ],
        ),
        migrations.CreateModel(
            name='DSCDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('dsc_type', models.CharField(blank=True, max_length=100, null=True)),
                ('dsc_number', models.CharField(blank=True, max_length=100, null=True)),
                ('issue_authority', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_issue', models.DateField(blank=True, null=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dsc_details', to='usermanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='FirmKYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('firm_registration_number', models.CharField(blank=True, max_length=40, null=True)),
                ('firm_email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('firm_mobile_number', models.CharField(blank=True, max_length=40, null=True)),
                ('number_of_firm_partners', models.IntegerField()),
                ('address', models.JSONField(blank=True, default=dict, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KeyManagerialPersonnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_managerial_personnel', to='usermanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_type', models.CharField(blank=True, max_length=100, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_issue', models.DateField(blank=True, null=True)),
                ('date_of_expiry', models.DateField(blank=True, null=True)),
                ('license_document', models.FileField(blank=True, null=True, storage=usermanagement.models.PrivateS3Storage(), upload_to=usermanagement.helpers.license_document_upload_path)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='license_details', to='usermanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('trial', 'Trial'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('auto_renew', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3)),
                ('via_suite', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_subscriptions', to=settings.AUTH_USER_MODEL)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_subscriptions', to='usermanagement.context')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='usermanagement.module')),
                ('suite_subscription', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='module_subscriptions', to='usermanagement.contextsuitesubscription')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleAddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('price_per_unit', models.FloatField()),
                ('billing_cycle', models.CharField(default='monthly', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.modulesubscription')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('context_type', models.CharField(choices=[('personal', 'Personal'), ('business', 'Business')], max_length=20)),
                ('role_type', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('manager', 'Manager'), ('employee', 'Employee'), ('custom', 'Custom')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_system_role', models.BooleanField(default=False)),
                ('is_default_role', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='usermanagement.context')),
            ],
            options={
                'ordering': ['context_type', 'role_type', 'name'],
                'unique_together': {('name', 'context')},
            },
        ),
        migrations.CreateModel(
            name='ServicePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('fixed', 'Fixed'), ('range', 'Range'), ('custom', 'Custom Quote'), ('success_based', 'Success Based')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('min_amount', models.FloatField(blank=True, null=True)),
                ('max_amount', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='usermanagement.service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('payment_pending', 'Payment Pending'), ('paid', 'Paid'), ('documents_pending', 'Documents Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='initiated', max_length=20)),
                ('payment_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(default=None, null=True)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('medium', 'Medium'), ('low', 'Low'), ('high', 'High')], default='low', max_length=20)),
                ('assignee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_request_assignee', to=settings.AUTH_USER_MODEL)),
                ('context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.context')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.serviceplan')),
                ('reviewer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_request_reviewer', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServicePaymentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razorpay_order_id', models.CharField(max_length=100)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.FloatField()),
                ('currency', models.CharField(default='INR', max_length=10)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('captured', 'Captured'), ('failed', 'Failed')], default='initiated', max_length=20)),
                ('method', models.CharField(blank=True, max_length=50, null=True)),
                ('captured', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=3)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('is_latest', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='yes', max_length=3)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.context')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.serviceplan')),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('amount', models.FloatField()),
                ('is_paid', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3)),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('feature_usage', models.JSONField(default=dict, help_text='Tracks feature usage quantities during this cycle')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycles', to='usermanagement.modulesubscription')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('plan_type', models.CharField(choices=[('trial', 'Trial'), ('monthly', 'Monthly'), ('annually', 'Annually')], max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price for the plan', max_digits=10)),
                ('billing_cycle_days', models.IntegerField(default=30, help_text='Number of days in billing cycle')),
                ('features_enabled', models.JSONField(default=dict)),
                ('is_active', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='yes', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_subscriptions', to='usermanagement.module')),
            ],
        ),
        migrations.AddField(
            model_name='modulesubscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_subscriptions', to='usermanagement.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='contextsuitesubscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_processed_for', to='usermanagement.subscriptionplan'),
        ),
        migrations.CreateModel(
            name='Suite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('available_for', models.CharField(choices=[('personal', 'Personal'), ('business', 'Business'), ('all', 'All')], default='all', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('included_modules', models.ManyToManyField(related_name='included_in_suites', to='usermanagement.module')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='suite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suite_subscriptions', to='usermanagement.suite'),
        ),
        migrations.CreateModel(
            name='TDSDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('pan', models.CharField(blank=True, max_length=20, null=True)),
                ('legal_name', models.CharField(blank=True, max_length=120, null=True)),
                ('trade_name', models.CharField(blank=True, max_length=120, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('deductor_category', models.CharField(blank=True, max_length=120, null=True)),
                ('deductor_type', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('pincode', models.IntegerField(null=True)),
                ('state', models.CharField(blank=True, max_length=60, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('tds_username', models.CharField(blank=True, max_length=60, null=True)),
                ('tds_password', models.CharField(blank=True, max_length=60, null=True)),
                ('authorized_personal_Details', models.JSONField(blank=True, default=dict, null=True)),
                ('income_tax_details', models.JSONField(blank=True, default=dict, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tds_details', to='usermanagement.business')),
            ],
        ),
        migrations.CreateModel(
            name='UserContextRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('invited', 'Invited'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_context_roles_added', to=settings.AUTH_USER_MODEL)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='usermanagement.context')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_contexts', to='usermanagement.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'context', 'role')},
            },
        ),
        migrations.CreateModel(
            name='UserKYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('pan_number', usermanagement.models.EncryptedField(blank=True, max_length=20, null=True)),
                ('aadhaar_number', usermanagement.models.EncryptedField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('icai_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.JSONField(blank=True, default=dict, null=True)),
                ('have_firm', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userkyc', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VisaApplications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True)),
                ('purpose', models.CharField(blank=True, max_length=20, null=True)),
                ('visa_type', models.CharField(blank=True, max_length=15, null=True)),
                ('destination_country', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visa_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'purpose', 'visa_type', 'destination_country')},
            },
        ),
        migrations.CreateModel(
            name='ServiceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('in progress', 'In Progress'), ('created', 'Created'), ('completed', 'Completed'), ('pending', 'Pending')], default='pending', max_length=40)),
                ('comments', models.CharField(blank=True, max_length=256, null=True)),
                ('quantity', models.IntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_details', to='usermanagement.servicesmasterdata')),
                ('visa_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='usermanagement.visaapplications')),
            ],
        ),
        migrations.CreateModel(
            name='GSTDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('gstin', models.CharField(blank=True, max_length=120, null=True)),
                ('legal_name', models.CharField(blank=True, max_length=120, null=True)),
                ('trade_name', models.CharField(blank=True, max_length=120, null=True)),
                ('gst_username', models.CharField(blank=True, max_length=60, null=True)),
                ('gst_password', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('pincode', models.IntegerField(null=True)),
                ('branch_name', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('authorized_signatory_pan', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('gst_document', models.FileField(blank=True, null=True, storage=usermanagement.models.PrivateS3Storage(), upload_to=usermanagement.helpers.gst_document_upload_path)),
                ('is_composition_scheme', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=3)),
                ('composition_scheme_percent', models.CharField(blank=True, max_length=200, null=True)),
                ('is_export_sez', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='no', max_length=3)),
                ('lut_reg_no', models.CharField(blank=True, max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('financial_year', models.CharField(blank=True, max_length=20)),
                ('lut_letter', models.FileField(blank=True, null=True, storage=usermanagement.models.PrivateS3Storage(), upload_to=usermanagement.helpers.lut_letter_upload_path)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gst_details', to='usermanagement.business')),
            ],
            options={
                'unique_together': {('business', 'gstin')},
            },
        ),
        migrations.CreateModel(
            name='ModuleFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=255)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='usermanagement.module')),
            ],
            options={
                'unique_together': {('module', 'service', 'action')},
            },
        ),
        migrations.CreateModel(
            name='ModuleUsageCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_key', models.CharField(max_length=100)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='usermanagement.subscriptioncycle')),
            ],
            options={
                'unique_together': {('cycle', 'feature_key')},
            },
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('currency', models.CharField(default='INR', max_length=10)),
                ('razorpay_order_id', models.CharField(max_length=255, unique=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_signature', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('card_last4', models.CharField(blank=True, max_length=4, null=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='created', max_length=20)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('raw_response', models.JSONField(blank=True, null=True)),
                ('notes', models.JSONField(blank=True, null=True)),
                ('payment_captured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_infos', to=settings.AUTH_USER_MODEL)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.context')),
                ('suite_subscription', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_infos', to='usermanagement.contextsuitesubscription')),
                ('plan', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_infos', to='usermanagement.subscriptionplan')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['razorpay_order_id'], name='usermanagem_razorpa_3545d9_idx'), models.Index(fields=['razorpay_payment_id'], name='usermanagem_razorpa_93b9df_idx'), models.Index(fields=['context', 'plan'], name='usermanagem_context_60e811_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='subscriptionplan',
            unique_together={('module', 'name')},
        ),
        migrations.CreateModel(
            name='UserFeaturePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actions', models.JSONField(default=list)),
                ('is_active', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('na', 'NA')], default='yes', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_feature_permissions', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='usermanagement.module')),
                ('user_context_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_permissions', to='usermanagement.usercontextrole')),
            ],
            options={
                'unique_together': {('user_context_role', 'module')},
            },
        ),
    ]
